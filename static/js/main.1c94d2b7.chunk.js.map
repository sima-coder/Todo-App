{"version":3,"sources":["components/auth/SignIn.jsx","actions/authActions.js","components/auth/SignUp.jsx","components/tasks/AddTodo.jsx","actions/todoActions.js","components/tasks/Check.jsx","components/tasks/Todo.jsx","components/tasks/Todos.jsx","components/dashboard/Dashboard.jsx","components/layout/NavItems.jsx","components/layout/NavBar.jsx","App.js","serviceWorker.js","reducers/todoReducer.js","reducers/authReducer.js","reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","state","console","log","uid","firebase","auth","dispatch","signIn","creds","getState","getFirebase","signInWithEmailAndPassword","email","password","then","type","catch","err","props","useState","signin","setSignin","handleChange","e","target","id","value","to","className","autoComplete","onSubmit","preventDefault","htmlFor","placeholder","onChange","signUp","createUserWithEmailAndPassword","signup","setSignup","addTodo","task","firestore","authorId","todo","date","Date","completed","collection","add","setTask","document","querySelector","reset","Check","checked","onClick","style","cursor","removeTodo","doc","delete","toggleCompleted","set","merge","editTodo","updateTask","setUpdateTask","moment","toDate","calendar","handleCheck","window","confirm","handleRemove","title","getElementById","classList","toggle","location","reload","handleEdit","onInput","compose","todos","ordered","firestoreConnect","ownProps","where","orderBy","map","key","signOut","App","path","component","SignIn","SignUp","Dashboard","position","toast","POSITION","TOP_CENTER","Boolean","hostname","match","todoReducer","action","success","error","warn","info","authReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","width","height","role","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1c94d2b7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {signIn} from '../../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SignIn = (props) => {\r\n\r\n    const [signin, setSignin] = useState({email:\"\", password:\"\"});\r\n\r\n    const handleChange = (e) => {\r\n        setSignin({...signin, [e.target.id] : e.target.value});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(signin);\r\n        props.signIn(signin);\r\n\r\n    }\r\n\r\n    // console.log( props.uid);\r\n\r\n    if (props.uid) return <Redirect to=\"/\" />\r\n   \r\n    return(\r\n        <div className=\"bg vh-100\">\r\n            <form className=\"container mt-5\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <legend><h2 className=\"text-dark p-3\">Sign In</h2></legend>\r\n                <div className=\"form-group col-lg-5\">\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" onChange={handleChange}/>\r\n                </div>\r\n                   \r\n                <div className=\"form-group col-lg-5\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" onChange={handleChange}/>\r\n                </div>  \r\n                <button type=\"submit\" className=\"btn btn-primary ml-3\">Sign In</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n      uid: uid\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      signIn: (creds) => dispatch(signIn(creds)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","export const signIn = creds => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n   \r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(creds.email, creds.password)\r\n            .then(() => {\r\n                dispatch({ type: \"SIGN_IN\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGN_IN_ERR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n   \r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGN_OUT\" });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signUp = creds => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n   \r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(creds.email, creds.password)\r\n            .then(() => {\r\n                dispatch({ type: \"SIGN_UP\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGN_UP_ERR\", err });\r\n            });\r\n    };\r\n};","import React, {useState} from 'react';\r\nimport {signUp} from '../../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const [signup, setSignup] = useState({email:\"\", password:\"\"});\r\n\r\n    const handleChange = (e) => {\r\n        setSignup({...signup, [e.target.id] : e.target.value});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(signup);\r\n        props.signUp(signup);\r\n    }\r\n\r\n    if( props.uid ) return <Redirect to=\"/\" />\r\n\r\n    return(\r\n         <div className=\"bg vh-100\">\r\n            <form className=\"container mt-5\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <legend><h2 className=\"text-dark p-3\">Sign Up</h2></legend>\r\n                <div className=\"form-group col-lg-5\">\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"form-group col-lg-5\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" onChange={handleChange}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary ml-3\">Sign Up</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n      uid: uid\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      signUp: (creds) => dispatch(signUp(creds)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, {useState} from 'react';\r\nimport { addTodo } from \"../../actions/todoActions\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddTodo = (props) => {\r\n\r\n    const [task, setTask] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setTask( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(task === '') return;\r\n        props.addTodo(task);\r\n        setTask('');\r\n        // console.log(todo);\r\n        document.querySelector('#addTodoForm').reset();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form id=\"addTodoForm\" className=\"container mt-5 bg-dark py-3\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col offset-3\">\r\n                        <input type=\"text\" className=\"form-control \" placeholder=\"Add a new task ...\" onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\">Add</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      addTodo: task => dispatch(addTodo(task))\r\n    };\r\n};\r\n  \r\n\r\nexport default connect(null, mapDispatchToProps)(AddTodo);\r\n\r\n","export const addTodo = task => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        const todo = { \r\n            task: task, \r\n            authorId: authorId,\r\n            date: new Date(),\r\n            completed: false\r\n        }\r\n        \r\n        firestore\r\n            .collection(\"todos\")\r\n            .add(todo)\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"ADD_TODO\",\r\n                    todo\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: \"ADD_TODO_ERR\",\r\n                    err\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const removeTodo = todo => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firestore = getFirebase().firestore();\r\n        // const author.id\r\n        firestore\r\n            .collection(\"todos\")\r\n            .doc(todo.id)\r\n            .delete()\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"REMOVE_TODO\",\r\n                    todo\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: \"REMOVE_TODO_ERR\",\r\n                    err\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\n\r\nexport const toggleCompleted = todo => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firestore = getFirebase().firestore();\r\n        // const author.id\r\n        firestore\r\n            .collection(\"todos\")\r\n            .doc(todo.id)\r\n            .set(\r\n                {\r\n                    ...todo,\r\n                    completed: !todo.completed\r\n                },\r\n                { merge: true }\r\n            )\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"TOGGLE_COMPLETED\",\r\n                    todo\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: \"TOGGLE_COMPLETED_ERR\",\r\n                    err\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const editTodo = (updateTask, todo) => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firestore = getFirebase().firestore();\r\n        firestore\r\n            .collection(\"todos\")\r\n            .doc(todo.id)\r\n            .set(\r\n                {\r\n                    ...todo,\r\n                    task: updateTask\r\n                },\r\n                { merge: true }\r\n            )\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"UPDATE_TODO\",\r\n                    todo\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: \"UPDATE_TODO_ERR\",\r\n                    err\r\n                });\r\n            });\r\n    };\r\n};","import React from 'react';\r\n\r\nconst Check = ({checked, onClick}) => {\r\n    if(checked === true){\r\n        return(\r\n            <span className=\"material-icons text-success\" \r\n                  style={{ cursor:\"pointer\" }}\r\n                  onClick={ onClick }>\r\n                check_circle\r\n            </span>\r\n        );\r\n    }else{\r\n        return(\r\n            <span className=\"material-icons text-muted\" \r\n                  style={{ cursor:\"pointer\" }}\r\n                  onClick={ onClick }>\r\n                check_circle\r\n            </span>\r\n        );\r\n    }    \r\n    \r\n}\r\n\r\nexport default Check;","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport Check from './Check';\r\nimport { removeTodo, toggleCompleted, editTodo } from '../../actions/todoActions';\r\n\r\nconst Todo = ({ todo, removeTodo, toggleCompleted, editTodo }) => {\r\n\r\n    const [updateTask, setUpdateTask] = useState('');\r\n\r\n    const handleRemove = (todo) => {\r\n        if ( window.confirm( \"Are you sure you want to delete this task ?\" ) ) {\r\n            removeTodo(todo);\r\n        }   \r\n    }\r\n\r\n    const handleCheck = (todo) => {\r\n        toggleCompleted(todo);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setUpdateTask( e.target.value);\r\n    }\r\n\r\n    const handleEdit = (todo) => {\r\n        // e.preventDefault();\r\n        if (updateTask === '') return;\r\n        editTodo(updateTask, todo);\r\n        window.location.reload();\r\n    }\r\n\r\n    const toggleEdit = (id) => {\r\n        const form = document.getElementById(id);\r\n        form.classList.toggle(\"hide\");\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <tr>\r\n                <th>{ todo.task }</th>\r\n                <td>{ moment(todo.date.toDate()).calendar() }</td>\r\n                <td><Check checked={ todo.completed } onClick={() => handleCheck(todo) }/></td>\r\n                <td>\r\n                    <span className=\"material-icons text-danger\" \r\n                          style={{ cursor:\"pointer\" }}\r\n                          onClick={ () => handleRemove(todo) }\r\n                          title=\"Delete\">\r\n                        delete\r\n                    </span>\r\n                    <span className=\"material-icons text-warning\"\r\n                          style={{ cursor:\"pointer\" }}\r\n                          onClick= { () => toggleEdit(todo.id) }\r\n                          title=\"Edit\"\r\n                      >\r\n                        edit\r\n                    </span>\r\n                    <form id={ todo.id }  className=\"hide\" onSubmit= { () => handleEdit(todo) } autoComplete=\"off\">\r\n                        <input type = \"text\" \r\n                              placeholder = { todo.task }\r\n                              onInput = { handleChange } />\r\n                    </form>\r\n                </td>\r\n            </tr>  \r\n        </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      removeTodo: todo => dispatch(removeTodo(todo)),\r\n      toggleCompleted: todo => dispatch(toggleCompleted(todo)),\r\n      editTodo: (task,todo) => dispatch(editTodo(task,todo))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Todo);","import React from 'react';\r\nimport Todo from './Todo';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nconst Todos = ({ todos }) => {\r\n\r\n    return(\r\n        <>\r\n            <table className=\"table table-dark container mt-5\">\r\n                <thead>\r\n                    <tr className=\"text-info\">\r\n                        <th >Tasks</th>\r\n                        <th >Added On</th>\r\n                        <th >Status</th>\r\n                        <th >Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { todos && todos.map(todo => <Todo todo={todo} key={todo.id} />) }\r\n                </tbody>\r\n            </table>    \r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    const todos = state.firestore.ordered.todos;\r\n    return {\r\n      todos: todos,\r\n      uid: state.firebase.auth.uid\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect((ownProps) => [\r\n        {\r\n            collection: \"todos\",\r\n            where:[\"authorId\",\"==\",ownProps.uid],\r\n            orderBy:[\"date\",\"desc\"]\r\n        }\r\n    ])\r\n)(Todos);\r\n","import React from 'react';\r\nimport AddTodo from '../tasks/AddTodo';\r\nimport Todos from '../tasks/Todos';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Dashboard = ({ uid }) => {\r\n    if (!uid ) return <Redirect to=\"signin\" />\r\n    return(\r\n        <>\r\n            <AddTodo />\r\n            <Todos/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // console.log(state);\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n      uid: uid \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {signOut} from '../../actions/authActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NavItems = ({ signOut, uid }) => {\r\n    if(uid){\r\n        return(\r\n            <Link to=\"/signin\" className=\"nav-link\" onClick={ signOut }>Log Out</Link> \r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <>\r\n                <div className=\"d-flex justify-content-flex-end\">\r\n                <Link to=\"/signup\" className=\"nav-link\">Sign Up</Link> \r\n                <Link to=\"/signin\" className=\"nav-link\">Sign In</Link> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // console.log(state);\r\n    const uid = state.firebase.auth.uid;\r\n    return {\r\n      uid: uid \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavItems);\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport NavItems from './NavItems';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <Link to=\"/\" className=\"navbar-brand\"><h3>Todo App</h3></Link>\r\n                <NavItems/>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    const todos = state.firestore.ordered.todos;\r\n    return {\r\n      todos: todos,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport NavBar from './components/layout/NavBar';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    \n    <div>\n      <BrowserRouter>\n        <NavBar/>\n        <Switch>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path=\"/\" component={Dashboard}/>\n        </Switch>\n        <ToastContainer  position={toast.POSITION.TOP_CENTER}/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { toast } from 'react-toastify';\r\n\r\nconst todoReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TODO': {\r\n            toast.success(\"A task was added successfully\");\r\n            return state;\r\n        }\r\n            \r\n        case 'ADD_TODO_ERR':{\r\n            toast.error(\"An error was occurred\");\r\n            return state;\r\n        }\r\n\r\n        case 'REMOVE_TODO': {\r\n            toast.warn(\"A task was removed successfully\");\r\n            return state;\r\n        }\r\n            \r\n        case 'REMOVE_TODO_ERR':{\r\n            toast.error(\"An error was occurred\");\r\n            return state;\r\n        }\r\n\r\n        case 'TOGGLE_COMPLETED': {\r\n            toast.info(\"A task status was completed\");\r\n            return state;\r\n        }\r\n            \r\n        case 'ADD_TODO_ERR':{\r\n            toast.error(\"An error was occurred\");\r\n            return state;\r\n        }\r\n\r\n        case 'UPDATE_TODO': {\r\n            toast.success(\"A task was updated successfully\");\r\n            return state;\r\n        }\r\n            \r\n        case 'UPDATE_TODO_ERR':{\r\n            toast.error(\"An error was occurred\");\r\n            return state;\r\n        }\r\n\r\n\r\n        default : return state\r\n    }    \r\n      \r\n}\r\n\r\nexport default todoReducer;","import { toast } from 'react-toastify';\r\n\r\nconst authReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'SIGN_IN': {\r\n            toast(\" Welcome, you are now connected to TodoApp\");\r\n            return state;\r\n        }\r\n\r\n        case 'SIGN_IN_ERR': {\r\n            toast.error(\"Sign in error\");\r\n            return state;\r\n        }\r\n\r\n        case 'SIGN_OUT': {\r\n            toast(\"You are disconnected at the moment !\");\r\n            return state;\r\n        }\r\n\r\n        case 'SIGN_UP': {\r\n            toast(\" Welcome !\");\r\n            return state;\r\n        }\r\n\r\n        case 'SIGN_UP_ERR': {\r\n            toast.error(\"Sign up error\");\r\n            return state;\r\n        }\r\n\r\n\r\n        default : return state\r\n    }    \r\n      \r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport todoReducer from \"./todoReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    todo: todoReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAnIZOHbWHAjHyrCilO58aWJcCEpE2GX0A\",\r\n    authDomain: \"todo-app-a6413.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-a6413.firebaseio.com\",\r\n    projectId: \"todo-app-a6413\",\r\n    storageBucket: \"todo-app-a6413.appspot.com\",\r\n    messagingSenderId: \"862494997405\",\r\n    appId: \"1:862494997405:web:6d411990827e6f9d900d74\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { getFirebase, ReactReduxFirebaseProvider} from \"react-redux-firebase\";\nimport firebase from \"./config/firebaseConfig\";\nimport { createFirestoreInstance } from \"redux-firestore\";\n\nimport { useSelector } from \"react-redux\"; //allow to select uid\nimport { isLoaded } from \"react-redux-firebase\"; //check the authentification is loaded or not\n\nconst store = createStore(rootReducer, applyMiddleware(thunk.withExtraArgument({getFirebase})));\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nfunction AuthIsLoaded({children}){\n  const auth = useSelector(state => state.firebase.auth);\n  if(!isLoaded(auth))\n    return (\n      <div className=\"text-center\">\n        <div className=\"spinner-grow text-primary mt-5 pt-5\"\n             style={{width:\"7rem\", height:\"7rem\"}}\n             role=\"status\">\n               <span className=\"sr-only\"> Loading... </span>\n        </div>\n      </div>\n    );\n  return children;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}